# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import spelling_bee_pb2 as spelling__bee__pb2


class WordGameStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateGame = channel.unary_unary(
                '/game_logic.WordGame/CreateGame',
                request_serializer=spelling__bee__pb2.CreateGameRequest.SerializeToString,
                response_deserializer=spelling__bee__pb2.CreateGameResponse.FromString,
                )
        self.RegisterPlayer = channel.unary_unary(
                '/game_logic.WordGame/RegisterPlayer',
                request_serializer=spelling__bee__pb2.RegisterPlayerRequest.SerializeToString,
                response_deserializer=spelling__bee__pb2.RegisterPlayerResponse.FromString,
                )
        self.ShowSelectedWord = channel.unary_unary(
                '/game_logic.WordGame/ShowSelectedWord',
                request_serializer=spelling__bee__pb2.ShowSelectedWordRequest.SerializeToString,
                response_deserializer=spelling__bee__pb2.ShowSelectedWordResponce.FromString,
                )
        self.CheckWord = channel.unary_unary(
                '/game_logic.WordGame/CheckWord',
                request_serializer=spelling__bee__pb2.CheckWordRequest.SerializeToString,
                response_deserializer=spelling__bee__pb2.CheckWordResponse.FromString,
                )
        self.CheckRanking = channel.unary_unary(
                '/game_logic.WordGame/CheckRanking',
                request_serializer=spelling__bee__pb2.CheckRankingRequest.SerializeToString,
                response_deserializer=spelling__bee__pb2.CheckRankingResponse.FromString,
                )
        self.StartGame = channel.unary_unary(
                '/game_logic.WordGame/StartGame',
                request_serializer=spelling__bee__pb2.StartGameRequest.SerializeToString,
                response_deserializer=spelling__bee__pb2.StartGameResponse.FromString,
                )
        self.GetStatus = channel.unary_unary(
                '/game_logic.WordGame/GetStatus',
                request_serializer=spelling__bee__pb2.GetStatusRequest.SerializeToString,
                response_deserializer=spelling__bee__pb2.GetStatusResponse.FromString,
                )
        self.GetPlayerWords = channel.unary_unary(
                '/game_logic.WordGame/GetPlayerWords',
                request_serializer=spelling__bee__pb2.GetPlayerWordsRequest.SerializeToString,
                response_deserializer=spelling__bee__pb2.GetPlayerWordsResponse.FromString,
                )


class WordGameServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateGame(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterPlayer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ShowSelectedWord(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckWord(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckRanking(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartGame(self, request, context):
        """send any of the statuses in the datatype.enum
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPlayerWords(self, request, context):
        """this will get the words the players have accredited to
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WordGameServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateGame': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateGame,
                    request_deserializer=spelling__bee__pb2.CreateGameRequest.FromString,
                    response_serializer=spelling__bee__pb2.CreateGameResponse.SerializeToString,
            ),
            'RegisterPlayer': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterPlayer,
                    request_deserializer=spelling__bee__pb2.RegisterPlayerRequest.FromString,
                    response_serializer=spelling__bee__pb2.RegisterPlayerResponse.SerializeToString,
            ),
            'ShowSelectedWord': grpc.unary_unary_rpc_method_handler(
                    servicer.ShowSelectedWord,
                    request_deserializer=spelling__bee__pb2.ShowSelectedWordRequest.FromString,
                    response_serializer=spelling__bee__pb2.ShowSelectedWordResponce.SerializeToString,
            ),
            'CheckWord': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckWord,
                    request_deserializer=spelling__bee__pb2.CheckWordRequest.FromString,
                    response_serializer=spelling__bee__pb2.CheckWordResponse.SerializeToString,
            ),
            'CheckRanking': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckRanking,
                    request_deserializer=spelling__bee__pb2.CheckRankingRequest.FromString,
                    response_serializer=spelling__bee__pb2.CheckRankingResponse.SerializeToString,
            ),
            'StartGame': grpc.unary_unary_rpc_method_handler(
                    servicer.StartGame,
                    request_deserializer=spelling__bee__pb2.StartGameRequest.FromString,
                    response_serializer=spelling__bee__pb2.StartGameResponse.SerializeToString,
            ),
            'GetStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStatus,
                    request_deserializer=spelling__bee__pb2.GetStatusRequest.FromString,
                    response_serializer=spelling__bee__pb2.GetStatusResponse.SerializeToString,
            ),
            'GetPlayerWords': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPlayerWords,
                    request_deserializer=spelling__bee__pb2.GetPlayerWordsRequest.FromString,
                    response_serializer=spelling__bee__pb2.GetPlayerWordsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'game_logic.WordGame', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class WordGame(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateGame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/game_logic.WordGame/CreateGame',
            spelling__bee__pb2.CreateGameRequest.SerializeToString,
            spelling__bee__pb2.CreateGameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterPlayer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/game_logic.WordGame/RegisterPlayer',
            spelling__bee__pb2.RegisterPlayerRequest.SerializeToString,
            spelling__bee__pb2.RegisterPlayerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ShowSelectedWord(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/game_logic.WordGame/ShowSelectedWord',
            spelling__bee__pb2.ShowSelectedWordRequest.SerializeToString,
            spelling__bee__pb2.ShowSelectedWordResponce.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckWord(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/game_logic.WordGame/CheckWord',
            spelling__bee__pb2.CheckWordRequest.SerializeToString,
            spelling__bee__pb2.CheckWordResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckRanking(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/game_logic.WordGame/CheckRanking',
            spelling__bee__pb2.CheckRankingRequest.SerializeToString,
            spelling__bee__pb2.CheckRankingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartGame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/game_logic.WordGame/StartGame',
            spelling__bee__pb2.StartGameRequest.SerializeToString,
            spelling__bee__pb2.StartGameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/game_logic.WordGame/GetStatus',
            spelling__bee__pb2.GetStatusRequest.SerializeToString,
            spelling__bee__pb2.GetStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPlayerWords(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/game_logic.WordGame/GetPlayerWords',
            spelling__bee__pb2.GetPlayerWordsRequest.SerializeToString,
            spelling__bee__pb2.GetPlayerWordsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
